= has_filter

has_filter provides a controller based interface for building and applying multiple filters to a DataMapper model through url params.

This project is just a fork of https://github.com/plataformatec/has_scope at this point using DataMapper models.
Simple filters work without any fundamental change to the forked code, but more complex cases have yet to be tested. 

install:

  gem install has_filter
  OR 
  gem 'has_filter'

use:

   Define your filters in your model by creating methods prefixed with filter_:
  
     class Ticket
       include DataMapper::Resource
     
       #...properties
  
       def self.by_priority(priority)
         all(:priority => priority)
       end
  
       def self.by_date(date)
         all(:created_at => date)
       end

       def self.by_period(started_at, ended_at)
         all(:created_at.gt=>started_at,  :created_at.lt=>ended_at) 
       end 
  
   Use your preferrred filters in your controller:
  
     class TicketsController < ApplicationController
       has_filter :by_priority
       has_filter :by_date, :using => [:which]
       has_filter :by_period, :using => [:started_at, :ended_at]
  
       def index
         @tickets = apply_filters(Ticket).all
       end

     end

   See results from your application in a browser:

      /tickets
      #=> a normal request returning all tickets

      /tickets?by_priority=low
      #=> all tickets with a priority of low 

      /tickets?params[date][which]=20110910
      #=> all tickets with the date of September 10th, 2011

      /tickets?params[by_period][started_at]=20110701&params[by_period][ended_at]=20101013
      #=> all tickets within the specified period     
  
= Brief roadmap and TODO  
  
  1) more complex test to see where the code falls apart with datamapper
  2) Recognizing filters in dm model 
     A way of connoting specifically filter methods in the model
     Isn't really necessary now that simple cases have been shown to work. A comment in your model suffices.
     a block that gets read as maybe
       filters do
          def date
          end
          def by_priority
          end
       end
     

== Contributing to has_filter
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 blueblank. See LICENSE.txt for
further details.
